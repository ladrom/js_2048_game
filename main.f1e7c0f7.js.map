{"version":3,"sources":["scripts/main.js"],"names":["startButton","document","querySelector","fieldRow","querySelectorAll","messageStart","messageLose","messageWin","gameField","gameScore","score","toOverGame","check","cells","every","el","classList","contains","rows","children","innerHTML","remove","toWinGame","forEach","toLockAllMoves","getRandomNumber","Math","floor","random","getNewValue","allNums","getNewCell","cell","cellValue","add","moveUp","activeCells","isFieldChanged","item","i","length","rowIndex","parentElement","cellIndex","j","newCell","cloneNode","nextEl","curValue","className","replaceWith","moveDown","moveRight","moveLeft","addEventListener","e","target","body","key"],"mappings":"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","file":"main.f1e7c0f7.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst startButton = document.querySelector('.start');\nconst fieldRow = document.querySelectorAll('.field-row');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst gameField = document.querySelector('tbody');\nconst gameScore = document.querySelector('.game-score');\nlet score = 0;\n\nstartButton.addEventListener('click', (e) => {\n  if (e.target.classList.contains('start')) {\n    messageStart.classList.add('hidden');\n    startButton.classList.add('restart');\n    startButton.innerHTML = 'Restart';\n    startButton.classList.remove('start');\n    getNewCell();\n    getNewCell();\n  } else {\n    const cells = document.querySelectorAll('td');\n\n    cells.forEach(el => {\n      el.className = 'field-cell';\n      el.innerHTML = '';\n    });\n    messageLose.classList.add('hidden');\n    score = 0;\n    gameScore.innerHTML = score;\n    getNewCell();\n    getNewCell();\n  }\n});\n\ndocument.body.addEventListener('keydown', (e) => {\n  if (e.key === 'ArrowUp') {\n    moveUp();\n    toWinGame();\n    toOverGame();\n  }\n\n  if (e.key === 'ArrowDown') {\n    moveDown();\n    toWinGame();\n    toOverGame();\n  }\n\n  if (e.key === 'ArrowRight') {\n    moveRight();\n    toWinGame();\n    toOverGame();\n  }\n\n  if (e.key === 'ArrowLeft') {\n    moveLeft();\n    toWinGame();\n    toOverGame();\n  }\n});\n\nfunction toOverGame() {\n  const cells = document.querySelectorAll('td');\n  const arrCells = [...cells];\n  const check = arrCells.every(el => el.classList.contains('active'));\n\n  if (check) {\n    const rows = document.querySelectorAll('tr');\n\n    if (rows[0].children[0].innerHTML !== rows[0].children[1].innerHTML\n      && rows[0].children[0].innerHTML !== rows[1].children[0].innerHTML\n      && rows[0].children[1].innerHTML !== rows[0].children[2].innerHTML\n      && rows[0].children[1].innerHTML !== rows[1].children[1].innerHTML\n      && rows[0].children[2].innerHTML !== rows[0].children[3].innerHTML\n      && rows[0].children[2].innerHTML !== rows[1].children[2].innerHTML\n      && rows[0].children[3].innerHTML !== rows[1].children[3].innerHTML\n      && rows[1].children[0].innerHTML !== rows[1].children[1].innerHTML\n      && rows[1].children[0].innerHTML !== rows[2].children[0].innerHTML\n      && rows[1].children[1].innerHTML !== rows[1].children[2].innerHTML\n      && rows[1].children[1].innerHTML !== rows[2].children[1].innerHTML\n      && rows[1].children[2].innerHTML !== rows[1].children[3].innerHTML\n      && rows[1].children[2].innerHTML !== rows[2].children[2].innerHTML\n      && rows[1].children[3].innerHTML !== rows[2].children[3].innerHTML\n      && rows[2].children[0].innerHTML !== rows[2].children[1].innerHTML\n      && rows[2].children[0].innerHTML !== rows[3].children[0].innerHTML\n      && rows[2].children[1].innerHTML !== rows[2].children[2].innerHTML\n      && rows[2].children[1].innerHTML !== rows[3].children[1].innerHTML\n      && rows[2].children[2].innerHTML !== rows[2].children[3].innerHTML\n      && rows[2].children[2].innerHTML !== rows[3].children[2].innerHTML\n      && rows[2].children[3].innerHTML !== rows[3].children[3].innerHTML\n      && rows[3].children[0].innerHTML !== rows[3].children[1].innerHTML\n      && rows[3].children[1].innerHTML !== rows[3].children[2].innerHTML\n      && rows[3].children[2].innerHTML !== rows[3].children[3].innerHTML\n    ) {\n      messageLose.classList.remove('hidden');\n    }\n  }\n}\n\nfunction toWinGame() {\n  const activeCells = document.querySelectorAll('.active');\n\n  activeCells.forEach(el => {\n    if (el.innerHTML === '2048') {\n      messageWin.classList.remove('hidden');\n      toLockAllMoves();\n    }\n  });\n}\n\nfunction toLockAllMoves() {\n  const activeCells = document.querySelectorAll('.active');\n\n  activeCells.forEach(el => {\n    el.classList.remove('active');\n  });\n}\n\nfunction getRandomNumber() {\n  return Math.floor(Math.random() * 4);\n}\n\nfunction getNewValue() {\n  const allNums = [2, 2, 2, 2, 2, 2, 2, 2, 2, 4];\n\n  return allNums[Math.floor(Math.random() * 10)];\n}\n\nfunction getNewCell() {\n  const cell = fieldRow[getRandomNumber()].children[getRandomNumber()];\n\n  if (!cell.innerHTML) {\n    const cellValue = getNewValue();\n\n    cell.classList.add(`field-cell--${cellValue}`, 'active');\n    cell.innerHTML = `${cellValue}`;\n  } else {\n    getNewCell();\n  }\n}\n\nfunction moveUp() {\n  const activeCells = document.querySelectorAll('.active');\n  let isFieldChanged = false;\n\n  activeCells.forEach(item => item.classList.remove('protected'));\n\n  for (let i = 0; i < activeCells.length; i++) {\n    const el = activeCells[i];\n    const rowIndex = el.parentElement.rowIndex;\n    const cellIndex = el.cellIndex;\n\n    if (rowIndex !== 0) {\n      for (let j = 0; j < rowIndex; j++) {\n        const newCell = el.cloneNode(true);\n        const nextEl = gameField.children[j].children[cellIndex];\n\n        if (!nextEl.classList.contains('active')) {\n          nextEl.replaceWith(newCell);\n          el.className = 'field-cell';\n          el.innerHTML = '';\n          isFieldChanged = true;\n        } else {\n          const curValue = +(nextEl.innerHTML);\n          const prevValue = +(el.innerHTML);\n\n          if (curValue === prevValue\n            && !nextEl.classList.contains('protected')) {\n            el.className = 'field-cell';\n            el.innerHTML = '';\n            nextEl.innerHTML = `${curValue * 2}`;\n            nextEl.className = 'field-cell';\n\n            nextEl.classList.add(\n              `field-cell--${curValue * 2}`, 'active', 'protected');\n            score += curValue * 2;\n            gameScore.innerHTML = score;\n            isFieldChanged = true;\n          } else {\n            nextEl.classList.add('protected');\n          }\n        }\n      }\n    }\n  }\n\n  if (isFieldChanged === true) {\n    getNewCell();\n  }\n}\n\nfunction moveDown() {\n  const activeCells = document.querySelectorAll('.active');\n  let isFieldChanged = false;\n\n  activeCells.forEach(item => item.classList.remove('protected'));\n\n  for (let i = activeCells.length - 1; i >= 0; i--) {\n    const el = activeCells[i];\n    const rowIndex = el.parentElement.rowIndex;\n    const cellIndex = el.cellIndex;\n\n    if (rowIndex !== 3) {\n      for (let j = 3; j > rowIndex; j--) {\n        const newCell = el.cloneNode(true);\n        const nextEl = gameField.children[j].children[cellIndex];\n\n        if (!nextEl.classList.contains('active')) {\n          nextEl.replaceWith(newCell);\n          el.className = 'field-cell';\n          el.innerHTML = '';\n          isFieldChanged = true;\n        } else {\n          const curValue = +(nextEl.innerHTML);\n          const prevValue = +(el.innerHTML);\n\n          if (curValue === prevValue\n            && !nextEl.classList.contains('protected')) {\n            el.className = 'field-cell';\n            el.innerHTML = '';\n            nextEl.innerHTML = `${curValue * 2}`;\n            nextEl.className = 'field-cell';\n\n            nextEl.classList.add(\n              `field-cell--${curValue * 2}`, 'active', 'protected');\n            score += curValue * 2;\n            gameScore.innerHTML = score;\n            isFieldChanged = true;\n          } else {\n            nextEl.classList.add('protected');\n          }\n        }\n      }\n    }\n  }\n\n  if (isFieldChanged === true) {\n    getNewCell();\n  }\n}\n\nfunction moveRight() {\n  const activeCells = document.querySelectorAll('.active');\n  let isFieldChanged = false;\n\n  activeCells.forEach(item => item.classList.remove('protected'));\n\n  for (let i = activeCells.length - 1; i >= 0; i--) {\n    const el = activeCells[i];\n    const rowIndex = el.parentElement.rowIndex;\n    const cellIndex = el.cellIndex;\n\n    if (cellIndex !== 3) {\n      for (let j = 3; j > cellIndex; j--) {\n        const newCell = el.cloneNode(true);\n        const nextEl = gameField.children[rowIndex].children[j];\n\n        if (!nextEl.classList.contains('active')) {\n          nextEl.replaceWith(newCell);\n          el.className = 'field-cell';\n          el.innerHTML = '';\n          isFieldChanged = true;\n        } else {\n          const curValue = +(nextEl.innerHTML);\n          const prevValue = +(el.innerHTML);\n\n          if (curValue === prevValue\n            && !nextEl.classList.contains('protected')) {\n            el.className = 'field-cell';\n            el.innerHTML = '';\n            nextEl.innerHTML = `${curValue * 2}`;\n            nextEl.className = 'field-cell';\n\n            nextEl.classList.add(\n              `field-cell--${curValue * 2}`, 'active', 'protected');\n            score += curValue * 2;\n            gameScore.innerHTML = score;\n            isFieldChanged = true;\n          } else {\n            nextEl.classList.add('protected');\n          }\n        }\n      }\n    }\n  }\n\n  if (isFieldChanged === true) {\n    getNewCell();\n  }\n}\n\nfunction moveLeft() {\n  const activeCells = document.querySelectorAll('.active');\n  let isFieldChanged = false;\n\n  activeCells.forEach(item => item.classList.remove('protected'));\n\n  for (let i = 0; i < activeCells.length; i++) {\n    const el = activeCells[i];\n    const rowIndex = el.parentElement.rowIndex;\n    const cellIndex = el.cellIndex;\n\n    if (cellIndex !== 0) {\n      for (let j = 0; j < cellIndex; j++) {\n        const newCell = el.cloneNode(true);\n        const nextEl = gameField.children[rowIndex].children[j];\n\n        if (!nextEl.classList.contains('active')) {\n          nextEl.replaceWith(newCell);\n          el.className = 'field-cell';\n          el.innerHTML = '';\n          isFieldChanged = true;\n        } else {\n          const curValue = +(nextEl.innerHTML);\n          const prevValue = +(el.innerHTML);\n\n          if (curValue === prevValue\n            && !nextEl.classList.contains('protected')) {\n            el.className = 'field-cell';\n            el.innerHTML = '';\n            nextEl.innerHTML = `${curValue * 2}`;\n            nextEl.className = 'field-cell';\n\n            nextEl.classList.add(\n              `field-cell--${curValue * 2}`, 'active', 'protected');\n            score += curValue * 2;\n            gameScore.innerHTML = score;\n            isFieldChanged = true;\n          } else {\n            nextEl.classList.add('protected');\n          }\n        }\n      }\n    }\n  }\n\n  if (isFieldChanged === true) {\n    getNewCell();\n  }\n}\n"]}